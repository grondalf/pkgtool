#!/bin/bash

# Installation directory
INSTALL_DIR="$HOME/.local/share/pkgtool"

# Error handling function
die() {
    echo "Error: $1" >&2
    exit 1
}

# Verify and source a single file
safe_source() {
    local file="$1"
    if [ -f "$file" ]; then
        # shellcheck source=/dev/null
        source "$file" || die "Failed to source $file"
    else
        die "Missing required file: $file"
    fi
}

# Source all required modules
load_dependencies() {
    # List of required files
    local lib_files=(
        "$INSTALL_DIR/lib/config.sh"
        "$INSTALL_DIR/lib/utils.sh"
        "$INSTALL_DIR/lib/dnf_ops.sh"
        "$INSTALL_DIR/lib/flatpak_ops.sh"
        "$INSTALL_DIR/lib/ui.sh"
        "$INSTALL_DIR/lib/flatpak_aliases.sh"
    )

    # Source each file
    for file in "${lib_files[@]}"; do
        safe_source "$file"
    done

    # Verify essential functions exist
    if ! command -v is_installed_dnf &>/dev/null; then
        die "Missing function: is_installed_dnf"
    fi
    if ! command -v is_installed_flatpak &>/dev/null; then
        die "Missing function: is_installed_flatpak"
    fi
}

# Load all dependencies
load_dependencies

# Main function
main() {
    if [ -z "$1" ]; then
        print_message "$RED" "Usage: $0 <package-name>"
        exit 1
    fi

    local package="$1"
    local update_aliases=false

    if is_installed_dnf "$package"; then
        show_removal_menu "$package" "dnf"
        choice=$(get_user_choice 1 4 "Enter your choice (1-4):")
        case $choice in
            1) remove_dnf "$package" ;;
            2) purge_dnf "$package" ;;
            3) reinstall_dnf "$package" ;;
            4) exit 0 ;;
        esac
    elif is_installed_flatpak "$package"; then
        show_removal_menu "$package" "flatpak"
        choice=$(get_user_choice 1 4 "Enter your choice (1-4):")
        case $choice in
            1) remove_flatpak "$package"; update_aliases=true ;;
            2) purge_flatpak "$package"; update_aliases=true ;;
            3) reinstall_flatpak "$package"; update_aliases=true ;;
            4) exit 0 ;;
        esac
    else
        show_installation_menu "$package"
        choice=$(get_user_choice 1 3 "Enter your choice (1-3):")
        case $choice in
            1) install_dnf "$package" ;;
            2) 
                if install_flatpak; then
                    install_flatpak_pkg "$package"
                    update_aliases=true
                else
                    print_message "$YELLOW" "Falling back to dnf installation..."
                    install_dnf "$package"
                fi 
                ;;
            3) exit 0 ;;
        esac
    fi

    if $update_aliases; then
        update_flatpak_aliases
    fi
}

main "$@"
